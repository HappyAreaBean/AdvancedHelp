plugins {
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id 'net.minecrell.plugin-yml.bukkit' version '0.5.1'
    id 'java'
}

group 'cc.happyareabean'
version '1.12.8'

compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

String libsPackage = getGroup() + ".libs"


bukkit {
    // Default values can be overridden if needed
    // name = 'TestPlugin'
    // version = '1.0'
    // description = 'This is a test plugin'
    // website = 'https://example.com'
    // author = 'Notch'

    // Plugin main class (required)
    main = 'me.codedred.advancedhelp.Main'

    // API version (should be set for 1.13+)
    apiVersion = '1.13'

    // Other possible properties from plugin.yml (optional)
    authors = ['HappyAreaBean', 'CodedRed']
    softDepend = ['PlaceholdersAPI', 'HeadDatabase', 'PlaceholderAPI']
    loadBefore = ['Essentials', 'CMI', 'EssentialsX']

    commands {
        help {
            description = 'Use /help to see the help section.'
            aliases = ['ehelp']
            permission = 'help.use'
            usage = '/<command>'
        }
        '?' {
            description = 'Use /? to see the help section.'
            permission = 'help.use'
            usage = '/<command>'
        }
        'ahelp' {
            description = 'Admin help for AdvancedHelp.'
            aliases = ['advancedhelp']
            permission = 'help.reload'
            usage = '/<command>'
        }
    }
}

repositories {
    maven {
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'

        // As of Gradle 5.1, you can limit this to only those
        // dependencies you expect from it
        content {
            includeGroup 'org.bukkit'
            includeGroup 'org.spigotmc'
        }
    }
    /*
     As Spigot-API depends on the BungeeCord ChatComponent-API,
    we need to add the Sonatype OSS repository, as Gradle,
    in comparison to maven, doesn't want to understand the ~/.m2
    directory unless added using mavenLocal(). Maven usually just gets
    it from there, as most people have run the BuildTools at least once.
    This is therefore not needed if you're using the full Spigot/CraftBukkit,
    or if you're using the Bukkit API.
    */
    maven { url = 'https://oss.sonatype.org/content/repositories/snapshots' }
    maven { url = 'https://oss.sonatype.org/content/repositories/central' }
    maven {
        name = "sonatype-oss-snapshots1"
        url = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
    }
    maven {
        url = 'https://repo.extendedclip.com/content/repositories/placeholderapi/'
    }

    mavenLocal() // This is needed for CraftBukkit and Spigot.
    mavenCentral()
}

dependencies {
    // Pick only one of these and read the comment in the repositories block.
    compileOnly 'org.spigotmc:spigot-api:1.18-R0.1-SNAPSHOT' // The Spigot API with no shadowing. Requires the OSS repo.
    compileOnly 'org.spigotmc:spigot:1.18-R0.1-SNAPSHOT' // The full Spigot server with no shadowing. Requires mavenLocal..

    compileOnly("com.arcaniax:HeadDatabase-API:1.3.1")
    compileOnly 'me.clip:placeholderapi:2.11.1'

    implementation "net.kyori:adventure-text-minimessage:4.11.0"
    implementation "net.kyori:adventure-platform-bukkit:4.1.1"

    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'

    testCompileOnly 'org.projectlombok:lombok:1.18.24'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'
}

shadowJar {
    archiveBaseName.set('AdvancedHelp')
    archiveClassifier.set('')
    archiveVersion.set('')

    relocate 'net.kyori', libsPackage + ".kyori"
    relocate 'org.jetbrains', libsPackage + ".jetbrains"
    relocate 'org.intellij', libsPackage + ".intellij"
}

task copyJarToBin(type: Copy) {
    from shadowJar
    into "E:/Coding Thing/1.17 Test Server/plugins"
}